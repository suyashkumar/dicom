/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: codec.i

package codec

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
extern void _wrap_Swig_free_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_codec_cffb419519a4d845(swig_intgo arg1);
extern uintptr_t _wrap_new_StringVector__SWIG_0_codec_cffb419519a4d845(void);
extern uintptr_t _wrap_new_StringVector__SWIG_1_codec_cffb419519a4d845(swig_type_1 arg1);
extern uintptr_t _wrap_new_StringVector__SWIG_2_codec_cffb419519a4d845(uintptr_t arg1);
extern swig_type_2 _wrap_StringVector_size_codec_cffb419519a4d845(uintptr_t arg1);
extern swig_type_3 _wrap_StringVector_capacity_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_StringVector_reserve_codec_cffb419519a4d845(uintptr_t arg1, swig_type_4 arg2);
extern _Bool _wrap_StringVector_isEmpty_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_StringVector_clear_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_StringVector_add_codec_cffb419519a4d845(uintptr_t arg1, swig_type_5 arg2);
extern swig_type_6 _wrap_StringVector_get_codec_cffb419519a4d845(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_StringVector_set_codec_cffb419519a4d845(uintptr_t arg1, swig_intgo arg2, swig_type_7 arg3);
extern void _wrap_delete_StringVector_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_0_codec_cffb419519a4d845(void);
extern uintptr_t _wrap_new_ByteVector__SWIG_1_codec_cffb419519a4d845(swig_type_8 arg1);
extern uintptr_t _wrap_new_ByteVector__SWIG_2_codec_cffb419519a4d845(uintptr_t arg1);
extern swig_type_9 _wrap_ByteVector_size_codec_cffb419519a4d845(uintptr_t arg1);
extern swig_type_10 _wrap_ByteVector_capacity_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_ByteVector_reserve_codec_cffb419519a4d845(uintptr_t arg1, swig_type_11 arg2);
extern _Bool _wrap_ByteVector_isEmpty_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_ByteVector_clear_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_ByteVector_add_codec_cffb419519a4d845(uintptr_t arg1, char arg2);
extern char _wrap_ByteVector_get_codec_cffb419519a4d845(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ByteVector_set_codec_cffb419519a4d845(uintptr_t arg1, swig_intgo arg2, char arg3);
extern void _wrap_delete_ByteVector_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_opj_input_memory_stream_pData_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_input_memory_stream_pData_get_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_opj_input_memory_stream_dataSize_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_input_memory_stream_dataSize_get_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_opj_input_memory_stream_offset_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_input_memory_stream_offset_get_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_new_opj_input_memory_stream_codec_cffb419519a4d845(void);
extern void _wrap_delete_opj_input_memory_stream_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_opj_input_memory_stream_seek_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_input_memory_stream_skip_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_input_memory_stream_read_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_opj_output_memory_stream_chunk_data_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_output_memory_stream_chunk_data_get_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_opj_output_memory_stream_chunk_dataLen_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_output_memory_stream_chunk_dataLen_get_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_new_opj_output_memory_stream_chunk_codec_cffb419519a4d845(void);
extern void _wrap_delete_opj_output_memory_stream_chunk_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_opj_output_memory_stream_dataSize_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_output_memory_stream_dataSize_get_codec_cffb419519a4d845(uintptr_t arg1);
extern void _wrap_opj_output_memory_stream_chunks_set_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_output_memory_stream_chunks_get_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_new_opj_output_memory_stream_codec_cffb419519a4d845(void);
extern void _wrap_delete_opj_output_memory_stream_codec_cffb419519a4d845(uintptr_t arg1);
extern uintptr_t _wrap_opj_output_memory_stream_seek_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_output_memory_stream_skip_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_opj_output_memory_stream_write_codec_cffb419519a4d845(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_voidp _wrap_J2K_Decode_codec_cffb419519a4d845(swig_voidp arg1, swig_type_12 arg2, swig_intgo arg3, swig_intgo arg4, swig_voidp arg5);
extern swig_voidp _wrap_JPEG_Decode_codec_cffb419519a4d845(swig_voidp arg1, swig_type_13 arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_intgo arg7, swig_intgo arg8, swig_voidp arg9);
extern swig_voidp _wrap_JPEGLS_Decode_codec_cffb419519a4d845(swig_voidp arg1, swig_type_14 arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_intgo arg7, swig_voidp arg8);
extern swig_voidp _wrap_J2K_Encode_codec_cffb419519a4d845(swig_voidp arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4, swig_intgo arg5, swig_intgo arg6, swig_voidp arg7);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


func getSwigcptr(v interface { Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}


type _ sync.Mutex

//export cgo_panic__codec_cffb419519a4d845
func cgo_panic__codec_cffb419519a4d845(p *byte) {
	s := (*[1024]byte)(unsafe.Pointer(p))[:]
	for i, b := range s {
		if b == 0 {
			panic(string(s[:i]))
		}
	}
	panic(string(s))
}


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_codec_cffb419519a4d845(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrStringVector uintptr

func (p SwigcptrStringVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringVector) SwigIsStringVector() {
}

func NewStringVector__SWIG_0() (_swig_ret StringVector) {
	var swig_r StringVector
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_0_codec_cffb419519a4d845()))
	return swig_r
}

func NewStringVector__SWIG_1(arg1 int64) (_swig_ret StringVector) {
	var swig_r StringVector
	_swig_i_0 := arg1
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_1_codec_cffb419519a4d845(C.swig_type_1(_swig_i_0))))
	return swig_r
}

func NewStringVector__SWIG_2(arg1 StringVector) (_swig_ret StringVector) {
	var swig_r StringVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (StringVector)(SwigcptrStringVector(C._wrap_new_StringVector__SWIG_2_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewStringVector(a ...interface{}) StringVector {
	argc := len(a)
	if argc == 0 {
		return NewStringVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewStringVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewStringVector__SWIG_2(a[0].(StringVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStringVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_size_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_StringVector_capacity_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_reserve_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.swig_type_4(_swig_i_1))
}

func (arg1 SwigcptrStringVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_StringVector_isEmpty_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_StringVector_clear_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrStringVector) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringVector_add_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrStringVector) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_StringVector_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrStringVector) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_StringVector_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteStringVector(arg1 StringVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_StringVector_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

type StringVector interface {
	Swigcptr() uintptr
	SwigIsStringVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrByteVector uintptr

func (p SwigcptrByteVector) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrByteVector) SwigIsByteVector() {
}

func NewByteVector__SWIG_0() (_swig_ret ByteVector) {
	var swig_r ByteVector
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_0_codec_cffb419519a4d845()))
	return swig_r
}

func NewByteVector__SWIG_1(arg1 int64) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := arg1
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_1_codec_cffb419519a4d845(C.swig_type_8(_swig_i_0))))
	return swig_r
}

func NewByteVector__SWIG_2(arg1 ByteVector) (_swig_ret ByteVector) {
	var swig_r ByteVector
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (ByteVector)(SwigcptrByteVector(C._wrap_new_ByteVector__SWIG_2_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewByteVector(a ...interface{}) ByteVector {
	argc := len(a)
	if argc == 0 {
		return NewByteVector__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewByteVector__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewByteVector__SWIG_2(a[0].(ByteVector))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrByteVector) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_size_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ByteVector_capacity_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_reserve_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.swig_type_11(_swig_i_1))
}

func (arg1 SwigcptrByteVector) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ByteVector_isEmpty_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Clear() {
	_swig_i_0 := arg1
	C._wrap_ByteVector_clear_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrByteVector) Add(arg2 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ByteVector_add_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.char(_swig_i_1))
}

func (arg1 SwigcptrByteVector) Get(arg2 int) (_swig_ret byte) {
	var swig_r byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (byte)(C._wrap_ByteVector_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrByteVector) Set(arg2 int, arg3 byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_ByteVector_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.char(_swig_i_2))
}

func DeleteByteVector(arg1 ByteVector) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ByteVector_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

type ByteVector interface {
	Swigcptr() uintptr
	SwigIsByteVector()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 byte)
	Get(arg2 int) (_swig_ret byte)
	Set(arg2 int, arg3 byte)
}

type SwigcptrOpj_input_memory_stream uintptr

func (p SwigcptrOpj_input_memory_stream) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpj_input_memory_stream) SwigIsOpj_input_memory_stream() {
}

func (arg1 SwigcptrOpj_input_memory_stream) SetPData(arg2 OPJ_UINT8) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_input_memory_stream_pData_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_input_memory_stream) GetPData() (_swig_ret OPJ_UINT8) {
	var swig_r OPJ_UINT8
	_swig_i_0 := arg1
	swig_r = (OPJ_UINT8)(SwigcptrOPJ_UINT8(C._wrap_opj_input_memory_stream_pData_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrOpj_input_memory_stream) SetDataSize(arg2 OPJ_SIZE_T) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_input_memory_stream_dataSize_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_input_memory_stream) GetDataSize() (_swig_ret OPJ_SIZE_T) {
	var swig_r OPJ_SIZE_T
	_swig_i_0 := arg1
	swig_r = (OPJ_SIZE_T)(SwigcptrOPJ_SIZE_T(C._wrap_opj_input_memory_stream_dataSize_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrOpj_input_memory_stream) SetOffset(arg2 OPJ_SIZE_T) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_input_memory_stream_offset_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_input_memory_stream) GetOffset() (_swig_ret OPJ_SIZE_T) {
	var swig_r OPJ_SIZE_T
	_swig_i_0 := arg1
	swig_r = (OPJ_SIZE_T)(SwigcptrOPJ_SIZE_T(C._wrap_opj_input_memory_stream_offset_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewOpj_input_memory_stream() (_swig_ret Opj_input_memory_stream) {
	var swig_r Opj_input_memory_stream
	swig_r = (Opj_input_memory_stream)(SwigcptrOpj_input_memory_stream(C._wrap_new_opj_input_memory_stream_codec_cffb419519a4d845()))
	return swig_r
}

func DeleteOpj_input_memory_stream(arg1 Opj_input_memory_stream) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_opj_input_memory_stream_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

type Opj_input_memory_stream interface {
	Swigcptr() uintptr
	SwigIsOpj_input_memory_stream()
	SetPData(arg2 OPJ_UINT8)
	GetPData() (_swig_ret OPJ_UINT8)
	SetDataSize(arg2 OPJ_SIZE_T)
	GetDataSize() (_swig_ret OPJ_SIZE_T)
	SetOffset(arg2 OPJ_SIZE_T)
	GetOffset() (_swig_ret OPJ_SIZE_T)
}

func Opj_input_memory_stream_seek(arg1 OPJ_OFF_T, arg2 uintptr) (_swig_ret OPJ_BOOL) {
	var swig_r OPJ_BOOL
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (OPJ_BOOL)(SwigcptrOPJ_BOOL(C._wrap_opj_input_memory_stream_seek_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func Opj_input_memory_stream_skip(arg1 OPJ_OFF_T, arg2 uintptr) (_swig_ret OPJ_OFF_T) {
	var swig_r OPJ_OFF_T
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (OPJ_OFF_T)(SwigcptrOPJ_OFF_T(C._wrap_opj_input_memory_stream_skip_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func Opj_input_memory_stream_read(arg1 uintptr, arg2 OPJ_SIZE_T, arg3 uintptr) (_swig_ret OPJ_SIZE_T) {
	var swig_r OPJ_SIZE_T
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (OPJ_SIZE_T)(SwigcptrOPJ_SIZE_T(C._wrap_opj_input_memory_stream_read_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

type SwigcptrOpj_output_memory_stream_chunk uintptr

func (p SwigcptrOpj_output_memory_stream_chunk) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpj_output_memory_stream_chunk) SwigIsOpj_output_memory_stream_chunk() {
}

func (arg1 SwigcptrOpj_output_memory_stream_chunk) SetData(arg2 OPJ_UINT8) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_output_memory_stream_chunk_data_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_output_memory_stream_chunk) GetData() (_swig_ret OPJ_UINT8) {
	var swig_r OPJ_UINT8
	_swig_i_0 := arg1
	swig_r = (OPJ_UINT8)(SwigcptrOPJ_UINT8(C._wrap_opj_output_memory_stream_chunk_data_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrOpj_output_memory_stream_chunk) SetDataLen(arg2 OPJ_SIZE_T) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_output_memory_stream_chunk_dataLen_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_output_memory_stream_chunk) GetDataLen() (_swig_ret OPJ_SIZE_T) {
	var swig_r OPJ_SIZE_T
	_swig_i_0 := arg1
	swig_r = (OPJ_SIZE_T)(SwigcptrOPJ_SIZE_T(C._wrap_opj_output_memory_stream_chunk_dataLen_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewOpj_output_memory_stream_chunk() (_swig_ret Opj_output_memory_stream_chunk) {
	var swig_r Opj_output_memory_stream_chunk
	swig_r = (Opj_output_memory_stream_chunk)(SwigcptrOpj_output_memory_stream_chunk(C._wrap_new_opj_output_memory_stream_chunk_codec_cffb419519a4d845()))
	return swig_r
}

func DeleteOpj_output_memory_stream_chunk(arg1 Opj_output_memory_stream_chunk) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_opj_output_memory_stream_chunk_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

type Opj_output_memory_stream_chunk interface {
	Swigcptr() uintptr
	SwigIsOpj_output_memory_stream_chunk()
	SetData(arg2 OPJ_UINT8)
	GetData() (_swig_ret OPJ_UINT8)
	SetDataLen(arg2 OPJ_SIZE_T)
	GetDataLen() (_swig_ret OPJ_SIZE_T)
}

type SwigcptrOpj_output_memory_stream uintptr

func (p SwigcptrOpj_output_memory_stream) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrOpj_output_memory_stream) SwigIsOpj_output_memory_stream() {
}

func (arg1 SwigcptrOpj_output_memory_stream) SetDataSize(arg2 OPJ_SIZE_T) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_output_memory_stream_dataSize_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_output_memory_stream) GetDataSize() (_swig_ret OPJ_SIZE_T) {
	var swig_r OPJ_SIZE_T
	_swig_i_0 := arg1
	swig_r = (OPJ_SIZE_T)(SwigcptrOPJ_SIZE_T(C._wrap_opj_output_memory_stream_dataSize_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrOpj_output_memory_stream) SetChunks(arg2 Std_vector_Sl_opj_output_memory_stream_chunk_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_opj_output_memory_stream_chunks_set_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrOpj_output_memory_stream) GetChunks() (_swig_ret Std_vector_Sl_opj_output_memory_stream_chunk_Sg_) {
	var swig_r Std_vector_Sl_opj_output_memory_stream_chunk_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_opj_output_memory_stream_chunk_Sg_)(SwigcptrStd_vector_Sl_opj_output_memory_stream_chunk_Sg_(C._wrap_opj_output_memory_stream_chunks_get_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewOpj_output_memory_stream() (_swig_ret Opj_output_memory_stream) {
	var swig_r Opj_output_memory_stream
	swig_r = (Opj_output_memory_stream)(SwigcptrOpj_output_memory_stream(C._wrap_new_opj_output_memory_stream_codec_cffb419519a4d845()))
	return swig_r
}

func DeleteOpj_output_memory_stream(arg1 Opj_output_memory_stream) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_opj_output_memory_stream_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0))
}

type Opj_output_memory_stream interface {
	Swigcptr() uintptr
	SwigIsOpj_output_memory_stream()
	SetDataSize(arg2 OPJ_SIZE_T)
	GetDataSize() (_swig_ret OPJ_SIZE_T)
	SetChunks(arg2 Std_vector_Sl_opj_output_memory_stream_chunk_Sg_)
	GetChunks() (_swig_ret Std_vector_Sl_opj_output_memory_stream_chunk_Sg_)
}

func Opj_output_memory_stream_seek(arg1 OPJ_OFF_T, arg2 uintptr) (_swig_ret OPJ_BOOL) {
	var swig_r OPJ_BOOL
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (OPJ_BOOL)(SwigcptrOPJ_BOOL(C._wrap_opj_output_memory_stream_seek_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func Opj_output_memory_stream_skip(arg1 OPJ_OFF_T, arg2 uintptr) (_swig_ret OPJ_OFF_T) {
	var swig_r OPJ_OFF_T
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := arg2
	swig_r = (OPJ_OFF_T)(SwigcptrOPJ_OFF_T(C._wrap_opj_output_memory_stream_skip_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func Opj_output_memory_stream_write(arg1 uintptr, arg2 OPJ_SIZE_T, arg3 uintptr) (_swig_ret OPJ_SIZE_T) {
	var swig_r OPJ_SIZE_T
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := arg3
	swig_r = (OPJ_SIZE_T)(SwigcptrOPJ_SIZE_T(C._wrap_opj_output_memory_stream_write_codec_cffb419519a4d845(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func J2K_Decode(arg1 *byte, arg2 int64, arg3 int, arg4 int, arg5 *int64) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (*byte)(C._wrap_J2K_Decode_codec_cffb419519a4d845(C.swig_voidp(_swig_i_0), C.swig_type_12(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_voidp(_swig_i_4)))
	return swig_r
}

func JPEG_Decode(arg1 *byte, arg2 int64, arg3 int, arg4 int, arg5 int, arg6 int, arg7 int, arg8 int, arg9 *int64) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	_swig_i_8 := arg9
	swig_r = (*byte)(C._wrap_JPEG_Decode_codec_cffb419519a4d845(C.swig_voidp(_swig_i_0), C.swig_type_13(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6), C.swig_intgo(_swig_i_7), C.swig_voidp(_swig_i_8)))
	return swig_r
}

func JPEGLS_Decode(arg1 *byte, arg2 int64, arg3 int, arg4 int, arg5 int, arg6 int, arg7 int, arg8 *int64) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	_swig_i_7 := arg8
	swig_r = (*byte)(C._wrap_JPEGLS_Decode_codec_cffb419519a4d845(C.swig_voidp(_swig_i_0), C.swig_type_14(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_intgo(_swig_i_6), C.swig_voidp(_swig_i_7)))
	return swig_r
}

func J2K_Encode(arg1 *byte, arg2 int, arg3 int, arg4 int, arg5 int, arg6 int, arg7 *int64) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (*byte)(C._wrap_J2K_Encode_codec_cffb419519a4d845(C.swig_voidp(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3), C.swig_intgo(_swig_i_4), C.swig_intgo(_swig_i_5), C.swig_voidp(_swig_i_6)))
	return swig_r
}


type SwigcptrOPJ_UINT8 uintptr
type OPJ_UINT8 interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOPJ_UINT8) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOPJ_OFF_T uintptr
type OPJ_OFF_T interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOPJ_OFF_T) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_opj_output_memory_stream_chunk_Sg_ uintptr
type Std_vector_Sl_opj_output_memory_stream_chunk_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_opj_output_memory_stream_chunk_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOPJ_SIZE_T uintptr
type OPJ_SIZE_T interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOPJ_SIZE_T) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrOPJ_BOOL uintptr
type OPJ_BOOL interface {
	Swigcptr() uintptr;
}
func (p SwigcptrOPJ_BOOL) Swigcptr() uintptr {
	return uintptr(p)
}

